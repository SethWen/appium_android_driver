'use strict';

var _Object$assign = require('babel-runtime/core-js/object/assign')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});
var commonCapConstraints = {
  platformName: {
    isString: true,
    inclusionCaseInsensitive: ['Android'],
    presence: true
  },
  app: {
    isString: true
  },
  appActivity: {
    isString: true
  },
  appPackage: {
    isString: true
  },
  appWaitActivity: {
    isString: true
  },
  appWaitPackage: {
    isString: true
  },
  appWaitDuration: {
    isNumber: true
  },
  deviceReadyTimeout: {
    isNumber: true
  },
  androidCoverage: {
    isString: true
  },
  androidDeviceReadyTimeout: {
    isNumber: true
  },
  androidDeviceSocket: {
    isString: true
  },
  androidInstallTimeout: {
    isNumber: true
  },
  adbPort: {
    isNumber: true
  },
  remoteAdbHost: {
    isString: true
  },
  avd: {
    isString: true
  },
  avdLaunchTimeout: {
    isNumber: true
  },
  avdReadyTimeout: {
    isNumber: true
  },
  avdArgs: {
    isString: true
  },
  useKeystore: {
    isBoolean: true
  },
  keystorePath: {
    isString: true
  },
  keystorePassword: {
    isString: true
  },
  keyAlias: {
    isString: true
  },
  keyPassword: {
    isString: true
  },
  chromeDriverPort: {
    isNumber: true
  },
  chromedriverExecutable: {
    isString: true
  },
  autoWebviewTimeout: {
    isNumber: true
  },
  intentAction: {
    isString: true
  },
  intentCategory: {
    isString: true
  },
  intentFlags: {
    isString: true
  },
  optionalIntentArguments: {
    isString: true
  },
  dontStopAppOnReset: {
    isBoolean: true
  },
  unicodeKeyboard: {
    isBoolean: true
  },
  resetKeyboard: {
    isBoolean: true
  },
  noSign: {
    isBoolean: true
  },
  recreateChromeDriverSessions: {
    isBoolean: false
  },
  autoLaunch: {
    isBoolean: true
  },
  nativeWebScreenshot: {
    isBoolean: true
  },
  androidScreenshotPath: {
    isString: true
  },
  androidInstallPath: {
    isString: true
  },
  clearSystemFiles: {
    isBoolean: true
  },
  extractChromeAndroidPackageFromContextName: {
    isBoolean: true
  },
  autoGrantPermissions: {
    isBoolean: true
  },
  sharedPreferences: {
    isObject: true
  },
  networkSpeed: {
    isString: true
  },
  gpsEnabled: {
    isBoolean: true
  },
  isHeadless: {
    isBoolean: true
  },
  showChromedriverLog: {
    isBoolean: true
  },
  skipUnlock: {
    isBoolean: true
  },
  clearDeviceLogsOnStart: {
    isBoolean: true
  }
};

var uiautomatorCapConstraints = {
  browserName: {
    isString: true
  },
  enablePerformanceLogging: {
    isBoolean: true
  },
  ignoreUnimportantViews: {
    isBoolean: true
  },
  disableAndroidWatchers: {
    isBoolean: true
  },
  acceptSslCerts: {
    isBoolean: true
  },
  chromeOptions: {
    isObject: true
  },
  androidNaturalOrientation: {
    isBoolean: true
  }
};

var desiredCapConstraints = {};

_Object$assign(desiredCapConstraints, commonCapConstraints, uiautomatorCapConstraints);

exports['default'] = desiredCapConstraints;
exports.commonCapConstraints = commonCapConstraints;
//# sourceMappingURL=data:application/json;charset=utf8;base64,
